dataset = read.csv('Salary_Data.csv')
install.packages('caTools')
library(caTools)
set.seed(123)
split=sample.split(dataset$Salary, SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
regressor = lm(formula = Salary ~ YearsExperience, data = training_set)
y_pred = predict(regressor, newdata = test_set)
install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y= training_set$Salary), colour='red') +
geom_line(aes(x=training_set$YearsExperience, y=predict(regressor,newdata = training_set,colour='blue')))+
ggtitle('Salary vs Experience (Training Set)') +
xlab('Years of Experience')+
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y= training_set$Salary), colour='red') +
geom_line(aes(x=training_set$YearsExperience, y=predict(regressor,newdata = training_set,colour='blue')))+
ggtitle('Salary vs Experience (Training Set)') +
xlab('Years of Experience')+
ylab('Salary')
dataset = read.csv('Salary_Data.csv')
install.packages('caTools')
library(caTools)
set.seed(123)
split=sample.split(dataset$Salary, SplitRatio = 0.8)
training_set=subset(dataset,split==TRUE)
test_set=subset(dataset,split==FALSE)
regressor = lm(formula = Salary ~ YearsExperience, data = training_set)
y_pred = predict(regressor, newdata = test_set)
install.packages('ggplot2')
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y= training_set$Salary), colour='red') +
geom_line(aes(x=training_set$YearsExperience, y=predict(regressor,newdata = training_set,colour='blue')))+
ggtitle('Salary vs Experience (Training Set)') +
xlab('Years of Experience')+
ylab('Salary')
setwd("~/Desktop/PROJECTS/RATION-DISTRIBUTION-ANALYSIS-AND-PREDICTION-SYSTEM/Machine Learning in R")
#Random Forest
#importing the dataset
dataset = read.csv('Test1_new.csv')
#categorical data
dataset$ids_familyrelation_gender = factor(dataset$ids_familyrelation_gender,
levels = c('Female', 'Male'),
labels = c(0,1))
dataset = dataset[, 5:7]
#splitting the data
set.seed(123)
split = sample.split(dataset$calories, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
#install.packages('randomForest')
#Fitting
regressor = randomForest(x = training_set[, 1:2],
y = training_set$calories,
ntree = 100)
#predicting
y_pred = predict(regressor, newdata = test_set)
#Random Forest
#importing the dataset
dataset = read.csv('Test1_new.csv')
#categorical data
dataset$ids_familyrelation_gender = factor(dataset$ids_familyrelation_gender,
levels = c('Female', 'Male'),
labels = c(0,1))
dataset = dataset[, 5:7]
#splitting the data
set.seed(123)
split = sample.split(dataset$calories, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
install.packages('randomForest')
#Fitting
regressor = randomForest(x = training_set[, 1:2],
y = training_set$calories,
ntree = 100)
#predicting
y_pred = predict(regressor, newdata = test_set)
library("randomForest", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
#Random Forest
#importing the dataset
dataset = read.csv('Test1_new.csv')
#categorical data
dataset$ids_familyrelation_gender = factor(dataset$ids_familyrelation_gender,
levels = c('Female', 'Male'),
labels = c(0,1))
dataset = dataset[, 5:7]
#splitting the data
set.seed(123)
split = sample.split(dataset$calories, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
install.packages('randomForest')
#Fitting
regressor = randomForest(x = training_set[, 1:2],
y = training_set$calories,
ntree = 100)
#predicting
y_pred = predict(regressor, newdata = test_set)
install.packages("randomForest")
#Random Forest
#importing the dataset
dataset = read.csv('Test1_new.csv')
#categorical data
dataset$ids_familyrelation_gender = factor(dataset$ids_familyrelation_gender,
levels = c('Female', 'Male'),
labels = c(0,1))
dataset = dataset[, 5:7]
#splitting the data
set.seed(123)
split = sample.split(dataset$calories, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
install.packages('randomForest')
#Fitting
regressor = randomForest(x = training_set[, 1:2],
y = training_set$calories,
ntree = 100)
#predicting
y_pred = predict(regressor, newdata = test_set)
install.packages("randomForest")
dataset = read.csv('Test1_new.csv')
#categorical data
dataset$ids_familyrelation_gender = factor(dataset$ids_familyrelation_gender,
levels = c('Female', 'Male'),
labels = c(0,1))
dataset = dataset[, 5:7]
#splitting the data
set.seed(123)
split = sample.split(dataset$calories, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
dataset = read.csv('Test1_new.csv')
dataset$ids_familyrelation_gender = factor(dataset$ids_familyrelation_gender,
levels = c('Female', 'Male'),
labels = c(0,1))
dataset = dataset[, 5:7]
set.seed(123)
split = sample.split(dataset$calories, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
library(caTools)
set.seed(123)
split = sample.split(dataset$calories, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
regressor = randomForest(x = training_set[, 1:2],
y = training_set$calories,
ntree = 100)
install.packages('randomForest')
